from scapy.all import *

# Define initial constants
SERVER_IP = '172.17.0.2'
SERVER_PORT = 502
INTERFACE = 'docker0'

# Define a callback function to process captured packets
def packet_callback(packet):
    if packet.haslayer(IP) and packet.haslayer(TCP):
        dst_ip = packet[IP].dst
        dst_port = packet[TCP].dport
        raw_data = bytes(packet[TCP].payload)

        # Filter Modbus packets (port 502) with destination IP 172.17.0.2
        if dst_ip == SERVER_IP and dst_port == SERVER_PORT:
            print(f"Modbus packet captured to {dst_ip}:{dst_port}")
            print(f"Raw data (hexadecimal): {raw_data.hex()}")

# Start sniffing on the specified interface ('docker0', 'eth0', 'lo', etc.)
sniff(iface=INTERFACE, prn=packet_callback, store=0)
