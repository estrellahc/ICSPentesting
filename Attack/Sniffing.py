from scapy.all import *
import sqlite3

# Define initial constants
SERVER_IP = '172.17.0.2'
SERVER_PORT = 502
INTERFACE = 'docker0'

# Database connection
conection = sqlite3.connect('modbus_data.db')
conn = conection.cursor()

# Create table
conn.execute('''CREATE TABLE IF NOT EXISTS modbus_data (
             id INTEGER PRIMARY KEY AUTOINCREMENT,
             src_IP TEXT,
             dst_IP TEXT,
             src_PORT TEXT,
             dst_PORT TEXT,
             data TEXT
             )''')

# Define a callback function to process captured packets
def packet_callback(packet):
    if packet.haslayer(TCP):
        if packet[TCP].dport == 502:
            src_ip = packet[IP].src
            dst_ip = packet[IP].dst
            src_port = packet[TCP].sport
            dst_port = packet[TCP].dport
            raw_data = bytes(packet[TCP].payload)

            # Filter Modbus packets (port 502) with destination IP 172.17.0.2
            if dst_ip == SERVER_IP and dst_port == SERVER_PORT:
                print(f"Modbus packet captured to {dst_ip}:{dst_port}")
                print(f"Raw data (hexadecimal): {raw_data.hex()}")
            
            # Save info in the database
            conn.execute("INSERT INTO modbus_data (src_IP, dst_IP, src_PORT, dst_PORT, data) VALUES (?, ?, ?, ?, ?)",
                                (src_ip, dst_ip, src_port, dst_port, raw_data.hex()))
            conection.commit()

# Start sniffing on the specified interface ('docker0', 'eth0', 'lo', etc.)
sniff(iface=INTERFACE, prn=packet_callback, store=0)
