from scapy.all import *

# Define constants
TARGET_IP = '172.17.0.2'
TARGET_PORT = 502
INTERFACE = 'docker0'
TARGET_HEX_DATA = '00080000000a010f0001001103000000'

# Define a variable to control stopping the sniffing
stop_sniffing = False

# Define a callback function to process captured packets
def packet_callback(packet):
    global stop_sniffing  # To modify the global variable within the function

    if packet.haslayer(IP) and packet.haslayer(TCP):
        dst_ip = packet[IP].dst
        dst_port = packet[TCP].dport
        raw_data = bytes(packet[TCP].payload)

        # Filter Modbus packets (port 502) with destination IP 172.17.0.2
        if dst_ip == TARGET_IP and dst_port == TARGET_PORT:
            print(f"Modbus packet captured to {dst_ip}:{dst_port}")
            print(f"Raw data (hexadecimal): {raw_data.hex()}")
            
            if raw_data.hex() == TARGET_HEX_DATA:
                print("Target packet captured. Stopping the sniffing.")
                stop_sniffing = True

# Start sniffing on the specified interface ('docker0', 'eth0', 'lo', etc.)
sniff(iface=INTERFACE, prn=packet_callback, stop_filter=lambda _: stop_sniffing)


